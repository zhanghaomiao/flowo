apiVersion: v1
kind: ConfigMap
metadata:
  name: caddy-config
  namespace: flowo
data:
  Caddyfile: |
    # Caddyfile for flowo Logger Plugin PostgreSQL
    # 
    # This configuration provides:
    # 1. Reverse proxy for /api/v1/* requests to the backend service
    # 2. Static file server for /work_dir with caching for images, PDFs, and HTML files

    # Default site configuration
    :80 {
        # Enable access logs
        log {
            output stdout
            format console
        }

        # Handle API requests - proxy to backend
        handle /api/v1/* {
            reverse_proxy flowo-backend:80
            
            # Apply security headers to API routes
            header {
                X-Content-Type-Options "nosniff"
                X-Frame-Options "DENY"
                X-XSS-Protection "1; mode=block"
                Referrer-Policy "strict-origin-when-cross-origin"
            }

            # Enable CORS for API endpoints
            @cors_preflight {
                method OPTIONS
            }
            handle @cors_preflight {
                header {
                    Access-Control-Allow-Origin "*"
                    Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
                    Access-Control-Allow-Headers "Content-Type, Authorization"
                    Access-Control-Max-Age "86400"
                }
                respond "" 204
            }

            header {
                Access-Control-Allow-Origin "*"
                Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
                Access-Control-Allow-Headers "Content-Type, Authorization"
            }
        }

        # Handle /work_dir requests - serve static files
        handle /work_dir/* {
            uri strip_prefix /work_dir
            file_server {
                root /work_dir
                browse
            }

            # Apply caching for specific file types
            @static {
                path *.png *.jpg *.jpeg *.gif *.svg *.pdf *.html *.css *.js
            }
            handle @static {
                header Cache-Control "public, max-age=3600"
            }

            # Security headers for static files
            header {
                X-Content-Type-Options "nosniff"
                X-Frame-Options "SAMEORIGIN"
                X-XSS-Protection "1; mode=block"
            }
        }

        # All other requests go to frontend
        handle {
            reverse_proxy flowo-frontend:80
            
            # Security headers for frontend
            header {
                X-Content-Type-Options "nosniff"
                X-Frame-Options "DENY"
                X-XSS-Protection "1; mode=block"
                Referrer-Policy "strict-origin-when-cross-origin"
                Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' ws: wss:; frame-ancestors 'none';"
            }
        }

        # Health check endpoint
        handle /health {
            respond "OK" 200
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caddy
  namespace: flowo
  labels:
    app: caddy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: caddy
  template:
    metadata:
      labels:
        app: caddy
    spec:
      containers:
      - name: caddy
        image: hub.miaodocker.space:8443/library/caddy:2-alpine
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: flowo-config
              key: TZ
        volumeMounts:
        - name: caddy-config
          mountPath: /etc/caddy/Caddyfile
          subPath: Caddyfile
        - name: work-dir
          mountPath: /work_dir
          readOnly: true
        - name: caddy-data
          mountPath: /data
        - name: caddy-config-vol
          mountPath: /config
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
      volumes:
      - name: caddy-config
        configMap:
          name: caddy-config
      - name: work-dir
        hostPath:
          path: /data/flowo-working  # Adjust this path as needed
          type: DirectoryOrCreate
      - name: caddy-data
        persistentVolumeClaim:
          claimName: caddy-data-pvc
      - name: caddy-config-vol
        persistentVolumeClaim:
          claimName: caddy-config-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: caddy
  namespace: flowo
  labels:
    app: caddy
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  selector:
    app: caddy
  type: LoadBalancer
