"""init

Revision ID: ba4e3285cd2d
Revises: 
Create Date: 2025-06-20 09:27:00.054278

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ba4e3285cd2d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('workflows',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('snakefile', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('RUNNING', 'SUCCESS', 'ERROR', 'WAITING', 'UNKNOWN', name='status'), nullable=True),
    sa.Column('command_line', sa.String(), nullable=True),
    sa.Column('dryrun', sa.Boolean(), nullable=False),
    sa.Column('rulegraph_data', sa.JSON(), nullable=True),
    sa.Column('logfile', sa.String(), nullable=True),
    sa.Column('user', sa.String(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('configfiles', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('directory', sa.String(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('flowo_working_path', sa.String(), nullable=True),
    sa.Column('run_info', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('workflow_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('errors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('exception', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('traceback', sa.Text(), nullable=True),
    sa.Column('file', sa.String(), nullable=True),
    sa.Column('line', sa.String(), nullable=True),
    sa.Column('rule_id', sa.Integer(), nullable=True),
    sa.Column('workflow_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('snakemake_id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Uuid(), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('wildcards', sa.JSON(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('resources', sa.JSON(), nullable=True),
    sa.Column('shellcmd', sa.String(), nullable=True),
    sa.Column('threads', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('RUNNING', 'SUCCESS', 'ERROR', 'WAITING', 'UNKNOWN', name='status'), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('file_type', sa.Enum('INPUT', 'OUTPUT', 'LOG', 'BENCHMARK', name='filetype'), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('files')
    op.drop_table('jobs')
    op.drop_table('errors')
    op.drop_table('rules')
    op.drop_table('workflows')
    # ### end Alembic commands ###
