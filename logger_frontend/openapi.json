{
  "openapi": "3.1.0",
  "info": {
    "title": "Snakemake Workflow Manager",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/workflows/": {
      "get": {
        "tags": [
          "workflow"
        ],
        "summary": "List Workflows",
        "description": "List all workflows with optional pagination and sorting.",
        "operationId": "list_workflows_api_v1_workflows__get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum number of workflows to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of workflows to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of workflows to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of workflows to skip"
          },
          {
            "name": "order_by_started",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Order by start time (True) or ID (False)",
              "default": true,
              "title": "Order By Started"
            },
            "description": "Order by start time (True) or ID (False)"
          },
          {
            "name": "descending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Order in descending order (newest first)",
              "default": true,
              "title": "Descending"
            },
            "description": "Order in descending order (newest first)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/{workflow_id}/jobs": {
      "get": {
        "tags": [
          "workflow"
        ],
        "summary": "List Workflow Jobs",
        "description": "List all jobs for a specific workflow with optional pagination and status filtering.",
        "operationId": "list_workflow_jobs_api_v1_workflows__workflow_id__jobs_get",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by job status",
              "title": "Status"
            },
            "description": "Filter by job status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobResponse"
                  },
                  "title": "Response List Workflow Jobs Api V1 Workflows  Workflow Id  Jobs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/{workflow_id}/rule_graph": {
      "get": {
        "tags": [
          "workflow"
        ],
        "summary": "Get Workflow Rule Graph",
        "description": "Get the rule graph for a specific workflow",
        "operationId": "get_workflow_rule_graph_api_v1_workflows__workflow_id__rule_graph_get",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Workflow Rule Graph Api V1 Workflows  Workflow Id  Rule Graph Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Jobs",
        "operationId": "get_jobs_api_v1_jobs__get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum number of jobs to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of jobs to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of jobs to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of jobs to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobResponse"
                  },
                  "title": "Response Get Jobs Api V1 Jobs  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/{job_id}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Job",
        "operationId": "get_job_api_v1_jobs__job_id__get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sse/events": {
      "get": {
        "tags": [
          "sse"
        ],
        "summary": "Stream Events",
        "description": "Server-Sent Events endpoint for real-time database notifications.\n\n客户端可以连接此端点接收实时通知:\n- GET /api/v1/sse/events - 接收所有表变化\n- GET /api/v1/sse/events?filters=workflows - 只接收workflows表变化\n- GET /api/v1/sse/events?filters=workflows,jobs - 接收workflows和jobs表变化",
        "operationId": "stream_events_api_v1_sse_events_get",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated list of table names to filter (e.g., 'workflows,jobs'). Use 'all' for all tables.",
              "title": "Filters"
            },
            "description": "Comma-separated list of table names to filter (e.g., 'workflows,jobs'). Use 'all' for all tables."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sse/health": {
      "get": {
        "tags": [
          "sse"
        ],
        "summary": "Sse Health Check",
        "operationId": "sse_health_check_api_v1_sse_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/sse/stats": {
      "get": {
        "tags": [
          "sse"
        ],
        "summary": "Get Sse Stats",
        "operationId": "get_sse_stats_api_v1_sse_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/sse/test-notification": {
      "post": {
        "tags": [
          "sse"
        ],
        "summary": "Send Test Notification",
        "operationId": "send_test_notification_api_v1_sse_test_notification_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "JobResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "rule_id": {
            "type": "integer",
            "title": "Rule Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "threads": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threads"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "shellcmd": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shellcmd"
          },
          "wildcards": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wildcards"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "resources": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resources"
          }
        },
        "type": "object",
        "required": [
          "id",
          "rule_id",
          "status"
        ],
        "title": "JobResponse",
        "description": "Schema for job response"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WorkflowListResponse": {
        "properties": {
          "workflows": {
            "items": {
              "$ref": "#/components/schemas/WorkflowResponse"
            },
            "type": "array",
            "title": "Workflows"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          }
        },
        "type": "object",
        "required": [
          "workflows",
          "total",
          "limit",
          "offset"
        ],
        "title": "WorkflowListResponse",
        "description": "Schema for workflow list response"
      },
      "WorkflowResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "snakefile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Snakefile"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "command_line": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Command Line"
          },
          "dryrun": {
            "type": "boolean",
            "title": "Dryrun"
          },
          "run_info": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Info"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "dryrun"
        ],
        "title": "WorkflowResponse",
        "description": "Schema for workflow response"
      }
    }
  }
}